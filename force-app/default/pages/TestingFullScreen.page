<apex:page >
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      * {
        box-sizing: border-box;
      }

      #fullscreen-div {
        height: 150px;
        padding: 1rem;
        background-color: pink;
      }

      #logger {
        height: 80px;
        padding: 0 0.5rem;
        background-color: white;
        overflow: scroll;
      }
    </style>
  </head>
  <body>
    <h1>fullscreenchange event example</h1>
    <div id="fullscreen-div">
      <button id="toggle-fullscreen">Toggle Fullscreen Mode</button>
      <div id="logger">
        <div>
          HELLO
          <div>
            BYE
          </div>
        </div>
      </div>
    </div>

    <script>

      window.onload = (event) => {
        if (window.confirm("You must be in fullscreen mode, You have 2 warnings left, click OK to go back to Fullscreen")) {
          var elem = document.body; // Make the body go full screen.
          requestFullScreen(elem);
        } else {
         console.log("gay");
        }
      };
      const logger = document.querySelector("#logger");
      const fullScreenElement = document.querySelector("#fullscreen-div");

      document.addEventListener('keydown', function (event) {
        event.preventDefault();
      });
  
      document.addEventListener('keyup', function (event) {
        event.preventDefault();
      });

      /*
      document.onkeydown = function (e) {
        alert(e.which);
        if (e.which == 27) {
          alert("HELLO");
        }
      };
      */

      /*
      document.addEventListener("fullscreenchange", function () {
        if (window.confirm("You must be in fullscreen mode, You have 2 warnings left, click OK to go back to Fullscreen")) {
            var elem = document.body; // Make the body go full screen.
            requestFullScreen(elem);
          } else {
           console.log("gay");
          }
      });
      */

      function log(message) {
        logger.textContent = `${logger.textContent}\n${message}`;
      }

      function requestFullScreen(element) {
        // Supports most browsers and their versions.
        var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;
    
        if (requestMethod) { // Native full screen.
          console.log("hello");
            requestMethod.call(element);
        } else if (typeof window.ActiveXObject !== "undefined") { // Older IE.
            var wscript = new ActiveXObject("WScript.Shell");
            if (wscript !== null) {
                wscript.SendKeys("{F11}");
            }
        }
    }

      function fullscreenchanged(event) {
        console.log('hello');
        // document.fullscreenElement will point to the element that
        // is in fullscreen mode if there is one. If there isn't one,
        // the value of the property is null.
        if (document.fullscreenElement) {
          log(
            `Element: ${document.fullscreenElement.id} entered fullscreen mode.`
          );
        } else {
          log("Leaving fullscreen mode.");
          if (window.confirm("You must be in fullscreen mode, You have 2 warnings left, click OK to go back to Fullscreen")) {
            var elem = document.body; // Make the body go full screen.
            requestFullScreen(elem);
          } else {
           console.log("gay");
          }

        }
      }

      document.addEventListener("fullscreenchange", fullscreenchanged);

      // When the toggle button is clicked, enter/exit fullscreen
      document
        .getElementById("toggle-fullscreen")
        .addEventListener("click", () => {
          if (document.fullscreenElement) {
            // exitFullscreen is only available on the Document object.
            document.exitFullscreen();
            
          } else {
            fullScreenElement.requestFullscreen();
          }
        });
    </script>
  </body>
</html>
</apex:page>