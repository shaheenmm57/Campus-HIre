<apex:page showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="true" controller="studentRegistrationController">
    <head>
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous"/>
        <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,800;1,100;1,200;1,300;1,400;1,500;1,800&display=swap" rel="stylesheet"/>
        <title>Novigo | Student Registration</title>
        <style>
            :root {
                --blue-color: #150958;
                --blue-color-hover: #200e89;
                --blue-color-hover-alt: #312a5a;
                --blue-color-select: #534798;
                --text-color: black;
                --background-color: white;
                --red-color: #EF233C;
                --yellow-color: #ffb01d;

                --green-color: #008000;
            }

            * {
                margin: 0;
                padding: 0;
                font-family: 'Poppins', sans-serif;
            }
            input{
                width: 15vw;
                height: 3vh;
                border: 1.5px solid var(--blue-color);
                padding: 2px;
                font-size: 1.25vw;
            }
            textarea{
                width: 15vw;
                height: 10vh;
                border: 1.5px solid var(--blue-color);
                padding: 2px;
                font-size: 1.25vw;
                resize: none;
            }
            textarea:focus{
                outline: none;
            }
            .phone-text{
                padding-right: 2px;
                font-size: 1.2vw;
            
                border-right: 1px dashed var(--blue-color);
            }
            input:focus{
                outline: none;
            }
            option{
                color: solid var(--blue-color)!important;
                width: 15vw;
                border: 1.5px solid var(--blue-color);
                background-color: none;

            }

            .phone-container{
                border: 1.5px solid var(--blue-color);
                display: flex;
            }
            .phone-container-error{
                border: 1.5px solid var(--red-color);
            }


            .select-style{
                width: 15.5vw !important;
                height: 4vh !important;
                border: 1.5px solid var(--blue-color);
                /* padding-left:2px; */
                padding-right: 2px; 
                background-color: none;
                font-size:1.25vw;

            }
            .input-error{
                border: 1.5px solid var(--red-color);
            }
            .input-warning{
                border: 1.5px solid var(--yellow-color);
            }


            .main {
                height: 100vh;
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            .header {
                height: 10vh;
                width: 100%;
                background: var(--blue-color);
                display: flex;
                align-items: center;
                justify-content: space-between
            }

            .novigo-icon {
                height: 6vh;
                margin-left: 8px;
            }
            .novigo-icon-big{
                opacity: 0.05;
                position: fixed;
                bottom: 0;
                right: 0;
                z-index: -1; 
                filter: grayscale(50%);
            }
            .title {
                /* margin-top: 4vh; */
                margin-right:4vh;
                display: flex;
                justify-content: center;
                align-items: center;
                position: sticky;
                top: 0;
                /* background-color: white; */
                z-index: 1;
            }
            .content-container {
                
                /* justify-content: center; */
            }

            .title-text {
                font-size: 2vw;
                font-family: 'Poppins', sans-serif;
                font-weight: 500;
                color: var(--background-color);
            }
            .section-body{
                margin-top:4vh;
                background-color: var(--background-color);
                border: 1px solid var(--blue-color);
                border-radius: 8px;
                box-shadow: 0px 1px 10px #150958;
                height: 60%;
            }
            .section-body-green-shadow{
                box-shadow: 0px 1px 10px var(--green-color);
            }
            .section-body-red-shadow{
                box-shadow: 0px 1px 10px var(--red-color);
            }

            .section-wrapper{
                padding: 1.5vh;
                margin-bottom: 2vh;
                display: flex;
                justify-content: center;
                flex-direction: column;

            }
            .section {
                
                padding: 1.5vh;
                /* cursor: pointer; */
                transition: border 0.2s, transform 0.2s;
                width: 40vw;
                max-height: 70vh;
                overflow-y: hidden;

            }

            /* .section:hover {
                border: 2px solid var(--blue-color);
                transform: translateY(-2px);
            } */

            .section-text-container{
                display:flex;
                flex-direction: column;
            }

            .section-text {
                font-weight: 500;
                font-size: 1.5vw;
                margin-left: 1vh;
                margin-bottom: 0.5vh;
                display: none;

            }
            .section-text-small{
                font-weight: 300;
                font-size: 0.8vw;
                margin-left: 1vh;
                margin-bottom: 0.5vh;
                color: var(--red-color);
            }

            .section-items {
                /* padding: 2vh; */
                display: flex;
                flex-direction: column;
                gap: 1.5vh;
            }

            .section-item {
                display: flex;
                justify-content: space-between;
                padding: 1;
                margin: 2vh;
            }

            .section-item-text {
                margin-right: 1vw;
                font-size: 1.2vw;
            }
            .section-buttons{
                display: flex;
                justify-content: space-around;
                flex-direction: row;
                margin-top: 1.5vh;
            }
            /* .prev-button, .next-button, .go-back-button {
                width: 15rem;
                height: 4rem;
                border-radius: 1rem;
                box-shadow: $shadow;
                justify-self: center;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                transition: .3s ease;
                } */

            .prev-button, .next-button, .go-back-button {
                background-color: var(--blue-color);
                color: var(--background-color);
                width: 50%;
                height: 5vh;
                padding: 2px;
                outline: none;
                border: 2px transparent;
                margin: 0.5vw;
                border-radius: 10px;
                cursor: pointer;
                transition: .3s ease;
                }

            .prev-button:hover, .next-button:hover {
                background-color: var(--blue-color-hover);
                }

            .submit-button{
                background-color: var(--green-color);
                color: var(--background-color);
                width: 50%;
                height: 5vh;
                padding: 2px;
                outline: none;
                border:2px transparent;
                margin: 0.5vw;
                border-radius: 10px;
                cursor: pointer;
            }
            /* .prev-button:hover,.next-button:hover {
                background-color: var(--blue-color-hover);
            } */


            .progress-bar {
                width: 100%;
                height: 35px;
                background-color: white;
                position: sticky;
                border-radius: 7px;
                border-bottom-left-radius: 0px;
                border-bottom-right-radius: 0px;
                top: 0;
                z-index: 1;
            }

            .progress {
                height: 100%;
                border-top: 1px solid var(--blue-color);
                display: flex;
                justify-content: flex-start;
                /* border-radius: 7px;
                border-bottom-left-radius: 0px;
                border-bottom-right-radius: 0px; */
                /* background-image: linear-gradient(45deg, var(--blue-color-hover), var(--blue-color-hover-alt)); */
                background-color: var(--blue-color);
                width: 25%;
                clip-path: polygon(0 0, 100% 0, 85% 100%, 0% 100%);
                transition: width 0.5s;
                align-items: flex-end;
            }
            .progress-green {
                background-image: linear-gradient(45deg, var(--green-color), #026d02);
            }
            .progress-red {
                background-image: linear-gradient(45deg, var(--red-color), red);
            }
            .progress-text{
                margin-left: 1vw;
                color: white;
                font-size: 22px;
                font-weight: 400;
            }
            .custom-checkbox{
                width: 20px;
                height: 3vh;
            }
            #successfulSection, #failSection{
                display: none;
            }
            
            .success-section{
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
            }

            .error-image{
                height:18px; 
                width:18px; 
                margin-left:0.5vw;
                margin-right: 1vw;
            }
            .error-alert {
                position: fixed;
                z-index: 1000; 
                top: 8%; 
                left: 50%;
                transform: translate(-50%, -50%);
                display: none;
                padding: 20px;
                border-radius: 10px;
                background-color: var(--red-color);
                color: white;
                margin-bottom: 15px;
                align-items: center;
                justify-content: center;
                align-content: center;
            }
            .alert-animation {
                animation-name: fade;
                animation-duration: 0.5s; /* Adjust the duration as needed */
            }

            @keyframes fade {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
            .error-warning {
                position: fixed;
                z-index: 1000; 
                top: 8%; 
                left: 50%;
                transform: translate(-50%, -50%);
                display: none;
                padding: 20px;
                border-radius: 10px;
                background-color: var(--yellow-color);
                color: black;
                margin-bottom: 15px;
                align-items: center;
                justify-content: center;
                align-content: center;
            }
            .closebtn {
            margin-left: 15px;
            color: white;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
            }

            .closebtn:hover {
            color: black;
            }
            .closebtn-black-color{
                color: black;
            }
            .closebtn-black-color:hover{
                color: white;
            }
            ::selection{
                color: white;
                background: var(--blue-color-hover);
            }

            .hide {display: none;}
            .loader {
                display: flex;
                justify-content: center;
                align-items: center;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                z-index: 9999;
            }

            /* .loader-inner {
                border: 4px solid #f3f3f3;
                border-top: 4px solid #3498db;
                border-radius: 50%;
                width: 100px;
                height: 100px;
                animation: spin 0.5s linear infinite;
            } */
            .loader-logo{
                position: absolute;
                top: 50;
                left: 50;
            }

            .loader-logo .logo-section-one {
                animation: moveOne 1.25s infinite alternate;
            }

            .loader-logo .logo-section-two {
                animation: moveTwo 1.25s infinite alternate;
            }

            @keyframes moveOne {
                0%, 100% {
                    fill: white;
                    transform: translate(-15px, -25px);
                    opacity: 0;
                    
                }
                50% {
                    fill: var(--red-color);
                    transform: translate(0, 0);
                    opacity: 1;
                }
            }

            @keyframes moveTwo {
                0%, 100% {
                    fill: white;
                    transform: translate(10px, 10px);
                    opacity: 0;
                }
                50% {
                    fill: var(--red-color);
                    transform: translate(0, 0);
                    opacity: 1;
                }
            }
            .hidden {
                display: none;
            }

            ::-webkit-scrollbar {
                    width: 12px;
                }

            ::-webkit-scrollbar-track {
                    background-color: rgb(244, 244, 244);
                    /* -webkit-box-shadow: inset 0 0 6px rgba(0, 25, 88, 0.3);  */
                    border-radius: 10px;
                }

            ::-webkit-scrollbar-thumb {
                    border-radius: 10px;
                    background-color: var(--blue-color);
                    transition: 0.3s;
                }
            ::-webkit-scrollbar-thumb:hover {
                    background-color: var(--blue-color-hover);
                }



                body {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    height: 100vh;
                }
                input[type=checkbox]{
                    height: 0;
                    width: 0;
                    visibility: hidden;
                }

                label {
                    cursor: pointer;
                    text-indent: -9999px;
                    width: 4vw;
                    height: 4vh;
                    background: white;
                    display: block;
                    border-radius: 100px;
                    position: relative;
                    border: 2px solid var(--blue-color);
                }

                label:after {
                    content: '';
                    position: absolute;
                    top: 5px;
                    left: 8px;
                    width: 1vw;
                    height: 2vh;
                    background: var(--blue-color);
                    border-radius: 90px;
                    transition: 0.3s;
                }

                input:checked + label {
                    background: var(--blue-color);
                }

                input:checked + label:after {
                    left: calc(100% - 5px);
                    transform: translateX(-100%);
                    background: white;
                }

                label:active:after {
                    background: white;
                    width: 40px;
                }

                .preview-section {
                    display: grid;
                    grid-template-columns: 1fr 1fr; /* Two columns for .previewTitle and .previewValue */
                    align-items: center; /* Center items vertically */
                    gap: 2vh; /* Gap between columns */
                    padding: 1;
                    margin: 2vh;
                }

                    .previewTitle {
                    color: var(--blue-color);
                    font-size: 1.25vw;
                    margin-left: 2vw;
                }

                    .previewValue {
                    color: var(--blue-color);
                    font-size: 1.25vw;
                    font-weight: 500;
                    margin-left: 2vw; /* Adjust margin if needed */
                }

                .details-summary{
                    display: flex;
                    flex-direction: column;
                    overflow-y: scroll;
                    max-height: 60vh;
                }
                .reg-text{
                    margin-top: 1vh;
                    font-size: 12px;
                    color: var(--blue-color);
                    text-align: center;
                }
                .branch-select{
                    display:none;
                }
                /* body {
                    background-image: url('{!URLFOR($Resource.novigo_logo_blue)}');
                    background-repeat: repeat; 
                    background-size: 20%; 
                    filter: grayscale(50%); 
                    transform: rotate(45deg);
                    position: fixed;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    margin: 0;
                } */

                /* .section-preview{
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    gap: 20px; 
                }
                .section-left-preview {
                    grid-column: 1;
                    text-align: left; 

                }

                .section-right-preview {
                    grid-column: 2;
                    text-align: right;
                } */
    </style>
    
    </head>
    <body>
        <div class="loader hidden">
            <div class="loader-logo loader-logo-animation">
                <svg width="120" height="120" viewBox="0 0 61 51" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M30.8919 50.5334C33.472 46.3136 35.8983 42.4107 38.2198 38.4516C38.447 38.062 38.1813 37.2563 37.8911 36.7808C30.6681 24.8707 23.4241 12.9705 16.1242 1.10328C15.7781 0.541945 14.9355 0.0697652 14.2502 0.0565574C9.65982 -0.0325952 5.0659 0.0103303 0 0.0103303C10.3486 16.9361 20.5293 33.5845 30.8919 50.5334Z" fill="white"/>
                    <path class="logo-section-one" d="M21.9257 0.0785001C28.4739 10.7867 34.8054 21.135 41.3047 31.7607C43.8779 27.5738 46.3182 23.6643 48.6536 19.7053C48.8844 19.3123 48.6641 18.5133 48.3844 18.0444C44.9897 12.4146 41.567 6.80127 38.0743 1.22428C37.7422 0.692662 36.8996 0.137935 36.2843 0.124727C31.6869 0.0322727 27.0825 0.0751975 21.9257 0.0751975V0.0785001Z" fill="#EF233C"/>
                    <path class="logo-section-two" d="M60.6489 0.124756H45.0002C47.6293 4.4404 50.1395 8.56784 52.7965 12.9264C55.4326 8.62727 57.9394 4.54276 60.6489 0.124756Z" fill="#EF233C"/>
                </svg>
            </div>
            <div class="loader-inner"></div>
        </div>
        <div class="error-warning" id="warningCustom">
            <img id="warnImg" src="{!URLFOR($Resource.iconAlertBlack)}" class="error-image"/>
            <span id="warnText" class="closebtn closebtn-black-color"  onclick="this.parentElement.style.display='none';">&times;</span>
        </div>
        <div class="error-alert" id="errorCustom">
            <img id="alertImg" src="{!URLFOR($Resource.iconAlertWhite)}" class="error-image"/>
            <span id="alertText" class="closebtn"  onclick="this.parentElement.style.display='none';">&times;</span>
        </div>
        <div class="main">
            <div class="header">
                <div>
                    <img class="novigo-icon" src="{!URLFOR($Resource.novigo_logo)}" alt="Novigo Icon"/>
                </div>
                <div class="title">
                    <svg style="margin-right: 1vw;" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="white" d="M11 9c0 1.66-1.34 3-3 3s-3-1.34-3-3s1.34-3 3-3s3 1.34 3 3m3 11H2v-2c0-2.21 2.69-4 6-4s6 1.79 6 4m8-6v2h-9v-2m9-4v2h-9V8m9-4v2h-9V4Z"/></svg>
                    <span class="title-text">Enter Your Details.</span>
                </div>
            </div>
            <!-- <div class="progress-bar">
                <div class="progress">
                    <span id="progressText" class="progress-text">1. Test Text</span>
                </div>
            </div> -->
            <div class="content-container">
                <apex:form >
                <div class="section-body">
                    <!-- <div class="progress-bar">
                        <div class="progress"></div>
                    </div> -->
                    <div class = "section-wrapper" id= "basicDetails">
                        <div class="section-text-container">
                            <span class="section-text">Basic Details</span>
                            <!-- <span class="section-text-small">All the fields are mandatory</span> -->
                        </div>
                        <div class="section">
                            <div class="section-items">
                                <div class="section-left">
                                    <div class="section-item">
                                        <span class="section-item-text">Student Name:</span>
                                        <input id="nameInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Phone Number:</span>
                                        <div class="phone-container" id='phoneContainer'>
                                            <span class="phone-text">+91</span>
                                            <input id="phoneInput" type="text" style="width:12.8vw; border:none;"></input>
                                        </div>
                                    </div>
                                    <!-- <div class="section-item" style="visibility: hidden;">
                                        <span class="section-item-text">blankSpace</span>
                                    </div> -->
                                    <div class="section-item">
                                        <span class="section-item-text">Student E-mail:</span>
                                        <input id="emailInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Re-enter E-mail</span>
                                        <input id="reenterEmailInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">City:</span>
                                        <input id="cityInput"></input>
                                    </div>
                                    <div class="section-item" style="visibility: hidden;">
                                        <span class="section-item-text">x</span>
                                        
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">College Name:</span>
                                        <select class="select-style" id="collegeDropdown" onchange="handleCollegeSelection()">
                                            <option id="invalidCollegeSelection" value="invalid" disabled="disabled" selected="selected">Select Your College</option>
                                        </select>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">USN:</span>
                                        <input id="usnInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Degree Type:</span>
                                        <select class="select-style" id="degreeDropdown">
                                            <option id="invalidDegreeSelection" value="invalid" disabled="disabled" selected="selected">Select Your Degree</option>
                                            <option id="bsc" value="Bachelor of Science (B.Sc.)">(B.Sc.) Bachelor of Science</option>
                                            <option id="bca" value="Bachelor of Computer Applications (BCA)">(BCA) Bachelor of Computer Applications</option>
                                            <option id="be" value="Bachelor of Engineering (B.E.)">(B.E.) Bachelor of Engineering</option>
                                            <option id="btech" value="Bachelor of Technology (B.Tech.)">(B.Tech.) Bachelor of Technology </option>
                                            <option id="mba" value="Master of Business Administration (MBA)">(MBA) Master of Business Administration </option>
                                            <option id="mca" value="Master of Computer Applications (MCA)">(MCA) Master of Computer Applications </option>
                                            <option id="msc" value="Master of Science (M.Sc.)">(M.Sc.) Master of Science </option>
                                            <option id="mtech" value="Master of Technology (M.Tech.)">(M.Tech.) Master of Technology</option>
                                        </select>
                                    </div>
                                        <div class="section-item branch-select" id="branchDropdownContainer">
                                        <span class="section-item-text">Branch:</span>
                                        <select class="select-style" id="branchDropdown">
                                            <option id="invalid" value="invalid" disabled="disabled" selected="selected">Select Your Branch</option>
                                            <option id="cse" value="Computer Science and Engineering (CSE)">(CSE) Computer Science and Engineering</option>
                                            <option id="ise" value="Information Science and Engineering (ISE)">(ISE) Information Science and Engineering</option>
                                            <option id="ece" value="Electronics and Communication Engineering (ECE)">(ECE) Electronics and Communication Engineering</option>
                                            <option id="aiml" value="Artificial Intelligence and Machine Learning (AI/ML)">(AI/ML) Artificial Intelligence and Machine Learning</option>
                                        </select>
                                    </div>
                                    <!-- <div class="section-item" style="visibility: hidden;">
                                        <span class="section-item-text">x</span>
                                    </div> -->
                                    <!-- <div class="section-item" id="addressSection"> 
                                        <span class="section-item-text">Address</span>
                                        <textarea id="address1Input"></textarea>
                                    </div> -->
                                    <!-- <div class="section-item">
                                        <span class="section-item-text">Address Line #2:</span>
                                        <input id="address2Input"></input>
                                    </div> -->
                                    <!-- <div class="section-item">
                                        <span class="section-item-text">City:</span>
                                        <input id="cityInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">State:</span>
                                        <input id="stateInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Pincode:</span>
                                        <input id="pincodeInput"></input>
                                    </div>                                     -->

                                </div>
                            </div>

                            
                        </div>
                        <div class="section-buttons">
                            <button type="button" class="next-button" onclick="nextValidation()">Submit</button>
                        </div>
                        <a id="createAcc" class="reg-text" href="/apex/studentLoginPageAlt">Already have an Account? Login Here </a>
                    </div>
                    
                    <div class="section-wrapper" id= "schoolDetails">
                        <div class="section-text-container">
                            <p class="section-text">2. SSLC/X Academic Details</p>
                        </div>
                        
                        <div class="section" style="overflow-y: hidden;">
                            <div class="section-items">
                                <div class="section-left">
                                    <div class="section-item">
                                        <span class="section-item-text">SSLC/X Institution Name</span>
                                        <input id="schoolNameInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">SSLC/X Marks</span>
                                        <input id="schoolMarksInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">SSLC/X Passing Year</span>
                                        <input id="schoolPassingYearInput"></input>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="section-buttons">
                            <button type="button" class="prev-button">Previous</button>
                            <button type="button" class="next-button">Next</button>
                        </div>
                    </div>
                    <div class="section-wrapper" id= "puDetails">
                        <div class="section-text-container">
                            <span class="section-text">3. PU Academic Details</span>
                        </div>
                        
                        <div class="section">
                        
                            <div class="section-items">
                                <div class="section-left">
                                    <div class="section-item">
                                        <span class="section-item-text">PU Institution Name</span>
                                        <input id="secondarySchoolNameInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">PU Marks</span>
                                        <input id="puMarksInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">PU Passing Year</span>
                                        <input id="puPassingYearInput"></input>
                                    </div>
                                    <div class="section-item" style="display:flex; justify-content: flex-start; align-items:center;">
                                        <span class="section-item-text" style="font-weight:bold; color:#EF233C">Include Diploma Details?</span>
                                        <!-- <div style="display:flex; justify-content: flex-start;">
                                            <input type="checkbox" id="includeDiploma" class="custom-checkbox" />
                                        </div> -->
                                        <div style="display:flex; justify-content: flex-start; margin-left:3.1vw;">
                                            <input type="checkbox" id="includeDiploma" /><label for="includeDiploma">Toggle</label>
                                        </div>
                                    </div>
                        
                                    <div id="diplomaDetails" style="display: none; margin-top: 1vh;">
                                        <div class="section-text-container">
                                            <span class="section-sub-text" style="display:none;">3a. Diploma Academic Details</span>
                                        </div>
                                        <div class="section-item">
                                            <span class="section-item-text">Diploma College Name</span>
                                            <input id="diplomaCollegeNameInput"></input>
                                        </div>  
                                        <div class="section-item">
                                            <span class="section-item-text">Diploma Marks</span>
                                            <input id="diplomaMarksInput"></input>
                                        </div>
                                        <div class="section-item">
                                            <span class="section-item-text">Diploma Passing Year</span>
                                            <input id="diplomaPassingYearInput"></input>
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                        <div class="section-buttons">
                            <button type="button" class="prev-button">Previous</button>
                            <button type="button" class="next-button">Next</button>
                        </div>
                    </div>
                    
                    <div class="section-wrapper" id= "degDetails">
                        <div class="section-text-container">
                            <span class="section-text">4. Degree Academic Details</span>
                        </div>
                        
                        <div class="section" style="overflow-y: hidden;">
                        
                            <div class="section-items">
                                <div class="section-left" id="degreeInputsContainer">
                                    <!-- <div class="section-item">
                                        <span class="section-item-text">Degree College Name</span>
                                        <input id="degreeCollegeNameInput"></input>
                                    </div> -->
                                    <div class="section-item">
                                        <span class="section-item-text">Degree Type:</span>
                                        <select class="select-style" id="degreeDropdown">
                                            <option id="invalidDegreeSelection" value="invalid" disabled="disabled" selected="selected">Select Your Degree</option>
                                            <option id="bsc" value="Bachelor of Science (B.Sc.)">(B.Sc.) Bachelor of Science</option>
                                            <option id="bca" value="Bachelor of Computer Applications (BCA)">(BCA) Bachelor of Computer Applications</option>
                                            <option id="be" value="Bachelor of Engineering (B.E.)">(B.E.) Bachelor of Engineering</option>
                                            <option id="btech" value="Bachelor of Technology (B.Tech.)">(B.Tech.) Bachelor of Technology </option>
                                            <option id="mba" value="Master of Business Administration (MBA)">(MBA) Master of Business Administration </option>
                                            <option id="mca" value="Master of Computer Applications (MCA)">(MCA) Master of Computer Applications </option>
                                            <option id="msc" value="Master of Science (M.Sc.)">(M.Sc.) Master of Science </option>
                                            <option id="mtech" value="Master of Technology (M.Tech.)">(M.Tech.) Master of Technology</option>
                                        </select>
                                    </div>
                                        <div class="section-item branch-select" id="branchDropdownContainer">
                                        <span class="section-item-text">Branch:</span>
                                        <select class="select-style" id="branchDropdown">
                                            <option id="invalid" value="invalid" disabled="disabled" selected="selected">Select Your Branch</option>
                                            <option id="cse" value="Computer Science and Engineering (CSE)">(CSE) Computer Science and Engineering</option>
                                            <option id="ise" value="Information Science and Engineering (ISE)">(ISE) Information Science and Engineering</option>
                                            <option id="ece" value="Electronics and Communication Engineering (ECE)">(ECE) Electronics and Communication Engineering</option>
                                            <option id="aiml" value="Artificial Intelligence and Machine Learning (AI/ML)">(AI/ML) Artificial Intelligence and Machine Learning</option>
                                        </select>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Degree CGPA</span>
                                        <input id="degreeMarksInput"></input>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text">Degree Passing Year</span>
                                        <input id="degreePassingYearInput"></input>
                                    </div>
                                </div>
                            </div>
                        
                        </div>
                        <div class="section-buttons">
                            <button type="button" class="prev-button">Previous</button>
                            <button type="button" class="next-button">Next</button>
                        </div>
                    </div>

                    <div class="section-wrapper" id="previewDetails" style="display:none; width: 80vw; height: 70vh;">
                        <div class="section-text-container">
                            <span class="section-text">5. Preview Your Details</span>
                        </div>
                        <div id="detailsSummary" class="details-summary"></div>
                    
                        <div class="preview-section-main" style="overflow-y: hidden">
                        </div>
                        <div>
                            <!-- <input type="checkbox" id="includeDiploma" class="custom-checkbox" />
                            <input type="checkbox" id="userConfirmationCheckbox" class="custom-checkbox"/> -->
                            <!-- <span>I Confirm that all the details I have entered are correct as per my knowledge</span> -->
                        </div>
                        <div class="section-buttons">
                            <button type="button" class="prev-button">Previous</button>
                            <button type="button" class="next-button" id="submitButton" onclick="validateAndCreateStudent()">Submit</button>
                        </div>
                    </div>
                    
                    <div class="section-wrapper" id="successfulSection">
                        <div class="section" style="overflow-y:hidden;">
                            <div class="section-items">
                                <div class="success-section">
                                    <div class="section-item">
                                        <!-- <svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 2048 2048"><path fill="green" d="M1024 0q141 0 272 36t244 104t207 160t161 207t103 245t37 272q0 141-36 272t-104 244t-160 207t-207 161t-245 103t-272 37q-141 0-272-36t-244-104t-207-160t-161-207t-103-245t-37-272q0-141 36-272t104-244t160-207t207-161T752 37t272-37zm603 685l-136-136l-659 659l-275-275l-136 136l411 411l795-795z"/></svg> -->
                                        <iframe style="outline:none; border:none;" src="https://lottie.host/?file=23e143eb-ddcf-4f90-9e78-3a2c47e57e6a/ueqFzJupr2.json"></iframe>
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text" style="color:#008000; margin-right:0; font-weight:400; font-size:1.5vw;">Details Successfully Stored</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="section-buttons">
                            <button type="button" class="submit-button" onclick="routeToStudentLogin()">Finish</button>
                        </div>
                    </div>
                    <div class="section-wrapper" id="failSection">
                        <div class="section" style="overflow-y:hidden;">
                            <div class="section-items">
                                <div class="success-section">
                                    <div class="section-item">
                                        <!-- <svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 2048 2048"><path fill="green" d="M1024 0q141 0 272 36t244 104t207 160t161 207t103 245t37 272q0 141-36 272t-104 244t-160 207t-207 161t-245 103t-272 37q-141 0-272-36t-244-104t-207-160t-161-207t-103-245t-37-272q0-141 36-272t104-244t160-207t207-161T752 37t272-37zm603 685l-136-136l-659 659l-275-275l-136 136l411 411l795-795z"/></svg> -->
                                        <iframe style="border:none; outline:none" src="https://lottie.host/?file=6c7fe4bc-b7f3-4b6c-88ba-70c4f6e504b4/vsOF6MZHZd.json"></iframe>
                                        <!-- <script src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script> 
                                        <lottie-player src="https://lottie.host/1521adaf-50d7-4b7e-b108-3d1c14fa48c9/GH1hTRgtm2.json" background="transparent" speed="1" style="width: 300px; height: 300px;" autoplay="autoplay"></lottie-player> -->
                                    </div>
                                    <div class="section-item">
                                        <span class="section-item-text" style="color: red; margin-right:0; font-weight:400; font-size:1.5vw;">Unable to Store Data</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="section-buttons">
                            <button id="goBackButton" type="next-button" class="go-back-button">Go Back</button>
                        </div>
                    </div>
                    
                </div>

                
            </apex:form>

            </div>
            
        </div>
        <div>
            <img class="novigo-icon-big" src="{!URLFOR($Resource.novigo_logo_blue)}" alt="Novigo Icon"/>
        </div>
    </body>
    <script>
    
        let sections = [];
        let currentSectionIndex = 0;
        const collegeListFromDataBase = [];
        const CollegeIDAndName = {};
        let usnEmailCheckSuccessful = false;
        let emailValidation = false;
    
    
    
    
        const sectionValidationStatus = new Array(sections.length).fill(false);

        // Add an event listener to the "Address" section
        const addressSection = document.getElementById("addressSection");
        if (addressSection) {
            addressSection.addEventListener("click", () => {
                // Scroll to the "Address" section
                addressSection.scrollIntoView({ behavior: "smooth" });
            });
        }

    
        document.addEventListener("DOMContentLoaded", () => {
            
            sections = document.querySelectorAll(".section-wrapper");
            const sectionIds = Array.from(sections).map((section) => section.id);
            const successfulSection = document.getElementById("successfulSection");
            const degDetailsSection = document.getElementById("degDetails");
            const prevDetailsSection = document.getElementById("previewDetails");
            const basicDetailsSection = document.getElementById("basicDetails");
            const failSection = document.getElementById("failSection");
            const nextButtons = document.querySelectorAll(".not-next-button");
            const prevButtons = document.querySelectorAll(".prev-button");
            const goBackButton = document.getElementById("goBackButton");
            const branchTypeId = document.getElementById('branchDropdown').id;
    
    
            const textFields = [                
                { id: 'cityInput', maxLength: 30, allowDecimal: false},
                { id: 'stateInput', maxLength: 30, allowDecimal: false},
                { id: 'nameInput', maxLength: 50, allowDecimal: false}, 
                { id: 'schoolNameInput', maxLength: 50, allowDecimal: false}, 
                { id: 'secondarySchoolNameInput', maxLength: 50, allowDecimal: false}, 
                { id: 'diplomaCollegeNameInput', maxLength: 50, allowDecimal: false},
            ];

            function allowOnlyText(inputField, maxLength, allowDecimal) {
                const warningCustom = document.getElementById('warningCustom');
                const phoneContainer = document.getElementById('phoneContainer');
    
                
                inputField.addEventListener('input', () => {
                    inputField.classList.remove("input-warning");
                    let value = inputField.value.trim();
                    console.log(value);
                    let hasWarning = false;
                    let hasPhoneWarning = false;

                    if (maxLength && value.length > maxLength) {
                            console.log("Max Length City");
                            value = value.slice(0, maxLength);
                            inputField.value = value;
                        }
                        if (!/^[a-zA-Z\s]*$/.test(value)) {
                            console.log("Check1");
                            value = value.slice(0, -1);
                            inputField.value = value;
                            hasWarning = true;
                        }


                        if (hasWarning) {
                            console.log("Test hasWarning");
                            console.log("Non Phone Input Error");
                            displayWarningMessage("Please Enter in Correct Format");
                            inputField.classList.add("input-warning");
                        } else {
                            warningCustom.style.display = "none";
                            inputField.classList.remove("input-warning");
                        }
                });
            }

            const inputFields = [
                { id: 'phoneInput', maxLength: 10, allowDecimal: false },
                { id: 'pincodeInput', maxLength: 6, allowDecimal: false },
                { id: 'schoolMarksInput', maxLength: 3, allowDecimal: true },
                { id: 'puMarksInput', maxLength: 3, allowDecimal: true },
                { id: 'degreeMarksInput', maxLength: 3, allowDecimal: true },
                { id: 'schoolPassingYearInput', maxLength: 4, allowDecimal: false },
                { id: 'puPassingYearInput', maxLength: 4, allowDecimal: false },
                { id: 'degreePassingYearInput', maxLength: 4, allowDecimal: false },
                { id: 'diplomaPassingYearInput', maxLength: 4, allowDecimal: false },
                { id: 'diplomaMarksInput', maxLength: 3, allowDecimal: true },
                { id: 'usnInput', maxLength: 10, allowDecimal:false},
            ];
            
            function allowOnlyNumbers(inputField, maxLength, allowDecimal) {
                const warningCustom = document.getElementById('warningCustom');
                const phoneContainer = document.getElementById('phoneContainer');
    
                
                inputField.addEventListener('input', () => {
                    inputField.classList.remove("input-warning");
                    let value = inputField.value.trim();
                    let hasWarning = false;
                    let hasPhoneWarning = false;
    
                    if (inputField.id === 'usnInput'){
                        if (maxLength && value.length > maxLength) {
                            value = value.slice(0, maxLength);
                        }
                        if (!/^[a-zA-Z0-9\s]+$/.test(value)) {
                            value = value.replace(/[^a-zA-Z0-9\s]+/g, '');
                            hasWarning = true;
                        }
                        if (hasWarning) {
                            console.log("Test hasWarning");
                            console.log("Non Phone Input Error");
                            displayWarningMessage("Please Enter in Correct Format");
                            inputField.classList.add("input-warning");
                        } else {
                            warningCustom.style.display = "none";
                            inputField.classList.remove("input-warning");
                        }
                    }

                    
                    if (inputField.id != 'phoneInput' && inputField.id !=  'usnInput' && inputField.id != 'puMarksInput' && inputField.id != 'degreeMarksInput' && inputField.id != 'schoolMarksInput' && inputField.id != 'diplomaMarksInput') {
                        if (maxLength && value.length > maxLength) {
                            value = value.slice(0, maxLength);
                            // hasWarning = true;
                        }
    
                        if (!/^\d*\.?\d*$/.test(value)) {
                            value = value.replace(/[^\d.]/g, '');
                            hasWarning = true;
                        }
    
                        if (!allowDecimal && value.includes('.')) {
                            value = value.split('.')[0];
                            hasWarning = true;
                        }
                        if (hasWarning) {
                            console.log("Test hasWarning");
                            console.log("Non Phone Input Error");
                            displayWarningMessage("Please Enter in Correct Format");
                            inputField.classList.add("input-warning");
                        } else {
                            warningCustom.style.display = "none";
                            inputField.classList.remove("input-warning");
                        }
                    }

                    if (inputField.id === 'puMarksInput' || inputField.id === 'degreeMarksInput' || inputField.id === 'schoolMarksInput' || inputField.id === 'diplomaMarksInput') {
                        if (value.includes('.')) {
                            const decimalCount = (value.match(/\./g) || []).length;
                            if (decimalCount > 1) {
                                const indexOfLastDecimal = value.lastIndexOf('.');
                                value = value.slice(0, indexOfLastDecimal) + value.slice(indexOfLastDecimal).replace('.', '');
                            }
                            
                            if (value.length > 4) {
                                value = value.slice(0, 4);
                            }
                        } else {
                            value = value.slice(0, maxLength);
                        }
                    }

    
                    inputField.value = value;
    
                    if (inputField.id === 'phoneInput') {
                        
                        if (maxLength && value.length > maxLength) {
                            console.log("Max Length");
                            phoneInput.value = phoneInput.value.slice(0, maxLength);
                            // hasPhoneWarning = true;
                        }
    
                        if (!/^\d*\.?\d*$/.test(value)) {
                            console.log("Wrong Text");
                            phoneInput.value = phoneInput.value.replace(/[^\d.]/g, '');
                            if(maxLength && value.length > maxLength){
                                hasPhoneWarning = false;
                            }
                            else{
                                hasPhoneWarning = true;
                            }
                            
                        }
    
                        if (!allowDecimal && value.includes('.')) {
                            console.log("Decimal");
                            phoneInput.value = phoneInput.value.split('.')[0];
                            if(maxLength && value.length > maxLength){
                                hasPhoneWarning = false;
                            }
                            else{
                                hasPhoneWarning = true;
                            }
                        }
    
                        if (hasPhoneWarning) {
                            console.log("Test hasWarning");
                            console.log("Non Phone Input Error");
                            displayWarningMessage("Please Enter in Correct Format");
                            phoneContainer.classList.add("input-warning");
                        } else {
                            warningCustom.style.display = "none";
                            phoneContainer.classList.remove("input-warning");
                        }
                    }
                });
            }
    
            inputFields.forEach((field) => {
                const inputField = document.getElementById(field.id);
                if (inputField) {
                    allowOnlyNumbers(inputField, field.maxLength, field.allowDecimal);
                }
            });

            textFields.forEach((field) => {
                const inputField = document.getElementById(field.id);
                if (inputField) {
                    allowOnlyText(inputField, field.maxLength, field.allowDecimal);
                }
            });
    
            getCollegeNames();
    
            const includeDiplomaCheckbox = document.getElementById("includeDiploma");
            const diplomaDetailsSection = document.getElementById("diplomaDetails");
    
            includeDiplomaCheckbox.addEventListener("change", () => {
                diplomaDetailsSection.style.display = includeDiplomaCheckbox.checked ? "block" : "none";
            });
    
            let clipWidth = 85;
            const progressBar = document.querySelector(".progress");
            const progressBarContainer = document.querySelector(".progress-bar");
            function updateProgressBar(index) {
                const sectionCount = sections.length - 1;
                const initialWidth = 25;
                clipWidth=85+(index*2.6);
                console.log(clipWidth);
                progressBarContainer.style.height = "35px";
                progressBar.style.clipPath = `polygon(0 0, 100% 0, ${clipWidth}% 100%, 0% 100%)`;
                let progressPercentage = ((index / sectionCount) * 100);
                if(index>0){progressPercentage = ((index / sectionCount) * 100)-7;}
                progressBar.style.width = `${initialWidth + progressPercentage}%`;
            }
    
            const sectionTexts = document.querySelectorAll(".section-text");
    
            function updateProgressText(index) {
                const sectionTexts = document.querySelectorAll(".section-text");
                progressText.textContent = sectionTexts[index].textContent;
            }
    
            sections.forEach((section, index) => {
                section.style.display = "none";
                if (index === 0) {
                    section.style.display = "flex";
                }
    
                goBackButton.addEventListener("click", () => {
                    failSection.style.display = "none";
                    const sectionShadow = document.querySelector(".section-body");
                    const progressBar = document.querySelector(".progress");
                    const progressText = document.querySelector(".progress-text");
                    // progressText.style.display = "flex";
                    sectionShadow.classList.remove("section-body-red-shadow");
                    // progressBar.classList.remove("progress-red");
                    basicDetailsSection.style.display = "flex";

                });
    

                section.addEventListener("click", (event) => {
                    event.stopPropagation();
                });

            });
    
            });
            function nextValidation() {
                let hasEmptyFields = false;
                    const nameInput = document.getElementById('nameInput');
                    const phoneInput = document.getElementById('phoneInput');
                    const emailInput = document.getElementById('emailInput');
                    const reenterEmailInput = document.getElementById('reenterEmailInput');
                    const usnInput = document.getElementById('usnInput');
                    const collegeDropdown = document.getElementById("collegeDropdown");
                    const degreeDropdown = document.getElementById("degreeDropdown");
                    const branchDropdown = document.getElementById("branchDropdown");
                    const city = document.getElementById("cityInput");

                    const degreeTypeId = document.getElementById('degreeDropdown').options[document.getElementById('degreeDropdown').selectedIndex].id

                    

                    // Remove any previous validation errors
                    nameInput.classList.remove("input-error");
                    phoneInput.classList.remove("phone-container-error");
                    emailInput.classList.remove('input-error');
                    reenterEmailInput.classList.remove('input-error');
                    usnInput.classList.remove('input-error');
                    collegeDropdown.classList.remove("input-error");
                    degreeDropdown.classList.remove("input-error"); 
                    branchDropdown.classList.remove("input-error");
                    city.classList.remove("input-error");

                    // Validate name
                    if (!nameInput.value.trim()) {
                        nameInput.classList.add("input-error");
                        hasEmptyFields = true;
                    }

                    // Validate phone number
                    if (!phoneInput.value.trim()) {
                        phoneInput.classList.add("phone-container-error");
                        hasEmptyFields = true;
                    } else if (phoneInput.value.length !== 10) {
                        phoneInput.classList.add("phone-container-error");
                        displayErrorMessage("Please Enter a 10 Digit Phone Number");
                        return;
                    }

                    // Validate USN
                    if (!usnInput.value.trim()) {
                        usnInput.classList.add('input-error');
                        hasEmptyFields = true;
                    }

                    if (!city.value.trim()) {
                        city.classList.add('input-error');
                        hasEmptyFields = true;
                    }


                    // Validate college dropdown
                    if (collegeDropdown.value === "invalid") {
                        collegeDropdown.classList.add("input-error");
                        hasEmptyFields = true;
                    }

                    // Validate degree dropdown
                    if (degreeDropdown.value === "invalid" ) {
                        degreeDropdown.classList.add("input-error");
                        hasEmptyFields = true;
                    }

                    // Validate branch dropdown
                    if (branchDropdown.value === "invalid" && (degreeTypeId === "be" || degreeTypeId === "btech")) {
                        branchDropdown.classList.add("input-error");
                        hasEmptyFields = true;
                    }

                    // Check if there are any empty fields
                    if (hasEmptyFields) {
                        displayErrorMessage("Please Enter All the Fields");
                        return;
                    }

                    if (!validateEmailFormat(emailInput.value)) {
                        emailInput.classList.add('input-error');
                        displayErrorMessage("Wrong Email Format");
                        return;
                    }

                    // Validate re-entered email
                    if (emailInput.value !== reenterEmailInput.value) {
                        reenterEmailInput.classList.add('input-error');
                        displayErrorMessage("Email Does Not Match");
                        return;
                    }

                    const usn = document.getElementById('usnInput').value;
                    const email = document.getElementById('emailInput').value;

                    showLoader();
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.studentRegistrationController.checkIfUsnAndEmailExist}',
                        usn,
                        email,
                        (result, event) => {
                            if (event.status) {
                                hideLoader();
                                if (result === true) {
                                    displayErrorMessage("USN/Mail Already Exists");
                                    return;
                                } else {
                                    usnEmailCheckSuccessful = true;
                                    basicValidateAndCreateStudent();
                                }
                            } else {
                                displayErrorMessage("!!Apex Error!! unable to check USN and email existence.");
                            }
                        }
                    );

                    // Call the function validateAndCreateStudent()
                }
            function getCollegeNames() {
                if (collegeListFromDataBase.length === 0) {
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.studentRegistrationController.getAllCollegeNames}',
                        handleCollegeNameResult
                    );
                }
            }
    
            function handleCollegeNameResult(result, event) {
                for (let i = 0; i < result.length; i++) {
                    collegeListFromDataBase.push(result[i].Name);
                    const collegeName = result[i].Name;
                    CollegeIDAndName[collegeName] = result[i].Id;
                }
                PopulateDropDown();
            }
    
            function PopulateDropDown() {
                const collegeDropdown = document.getElementById("collegeDropdown");
                for (let i = 0; i < collegeListFromDataBase.length; i++) {
                    const option = document.createElement("option");
                    option.value = CollegeIDAndName[collegeListFromDataBase[i]];
                    option.text = collegeListFromDataBase[i];
                    collegeDropdown.appendChild(option);
                }
            }
    
            function handleCollegeSelection() {
                const collegeDropdown = document.getElementById("collegeDropdown");
                const selectedCollege = collegeDropdown.options[collegeDropdown.selectedIndex].text;
                console.log("Selected College:", selectedCollege);
            }
    
            document.getElementById("collegeDropdown").addEventListener("change", handleCollegeSelection);
    
            function validateEmailFormat(email) {
                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailPattern.test(email);
            }

            const degreeTypeContainer = document.getElementById('degreeDropdown');
            const branchTypeContainer = document.getElementById('branchDropdown');
    
            degreeTypeContainer.addEventListener("change", function(){

                console.log("Degree Changed");
                const selectedId = degreeTypeContainer.options[degreeTypeContainer.selectedIndex].id;
                const branchSelectClass = document.querySelector("branch-selector");
                const branchSelect = document.getElementById('branchDropdownContainer');
                console.log("Selected ID: " + selectedId);
    
                if (selectedId === "be" || selectedId === "btech") {
                    console.log("Display Branch Select Option");
                    branchSelect.classList.remove("branch-select");
                } else {
                    branchTypeContainer.selectedIndex = 0;
                    console.log("Remove Branch Select Option");
                    branchSelect.classList.add("branch-select");

                }
            });
        const userConfirmationCheckbox = document.getElementById('userConfirmationCheckbox');
        const submitButton = document.getElementById('submitButton');
    
        userConfirmationCheckbox.addEventListener('change', function () {
            if (this.checked) {
                submitButton.removeAttribute('disabled');
            } else {
                submitButton.setAttribute('disabled', 'disabled');
            }
        });

        function basicValidateAndCreateStudent() {
                let hasEmptyFields = false;
                const name = document.getElementById('nameInput').value;
                const phone = document.getElementById('phoneInput').value;
                const email = document.getElementById('emailInput').value;
                // const address2 = document.getElementById('address2Input').value;
                const usn = document.getElementById('usnInput').value;
                const city = document.getElementById('cityInput').value;
                const collegeId = document.getElementById('collegeDropdown').value;
                // Define these variables outside of the event listener
                const degreeTypeContainer = document.getElementById('degreeDropdown');
                const branchTypeContainer = document.getElementById('branchDropdown');
    
                const degreeType = document.getElementById('degreeDropdown').value;
                const branchType = document.getElementById('branchDropdown').value;
                // Add an event listener to a common parent element that contains degree-related inputs
                const degreeInputsContainer = document.getElementById('degreeInputsContainer');


                const address1 = 'NA';
                // const city = 'NA';
                const state = 'NA';
                const pincode = '0';
                const schoolName = 'NA';
                const schoolMarks = '0';
                const schoolPassYear = '0';
                const secondarySchoolName = 'NA';
                const puMarks = '0';
                const puPassingYear = '0';
                const degreeMarks = '0';
                const degreePassingYear = '0';
    
    
                
    
                showLoader();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.studentRegistrationController.createStudentBasicAccount}',
                    name,
                    phone,
                    email,
                    address1,
                    // address2,
                    usn,
                    city,
                    state,
                    pincode,
                    collegeId,
                    schoolName,
                    schoolMarks,
                    schoolPassYear,
                    secondarySchoolName,
                    puMarks,
                    puPassingYear,
                    degreeType,
                    branchType,
                    degreeMarks,
                    degreePassingYear,
                    handleResult
                );
            }

            
    
        function validateAndCreateStudent() {
                let hasEmptyFields = false;
                const name = document.getElementById('nameInput').value;
                const phone = document.getElementById('phoneInput').value;
                const email = document.getElementById('emailInput').value;
                const address1 = document.getElementById('address1Input').value;
                // const address2 = document.getElementById('address2Input').value;
                const city = document.getElementById('cityInput').value;
                const state = document.getElementById('stateInput').value;
                const pincode = document.getElementById('pincodeInput').value;
                const usn = document.getElementById('usnInput').value;
                const collegeId = document.getElementById('collegeDropdown').value;
                const schoolName = document.getElementById('schoolNameInput').value;
                const schoolMarks = document.getElementById('schoolMarksInput').value;
                const schoolPassYear = document.getElementById('schoolPassingYearInput').value;
                const secondarySchoolName = document.getElementById('secondarySchoolNameInput').value;
                const puMarks = document.getElementById('puMarksInput').value;
                const puPassingYear = document.getElementById('puPassingYearInput').value;
                const includeDiploma = document.getElementById('includeDiploma').value;
                // Define these variables outside of the event listener
                const degreeMarksContainer = document.getElementById('degreeMarksInput');
                const degreePassingYearContainer = document.getElementById('degreePassingYearInput');
                const degreeTypeContainer = document.getElementById('degreeDropdown');
                const branchTypeContainer = document.getElementById('branchDropdown');
    
                const degreeMarks = document.getElementById('degreeMarksInput').value;
                const degreePassingYear = document.getElementById('degreePassingYearInput').value;
                const degreeType = document.getElementById('degreeDropdown').value;
                const branchType = document.getElementById('branchDropdown').value;
                // Add an event listener to a common parent element that contains degree-related inputs
                const degreeInputsContainer = document.getElementById('degreeInputsContainer');

                const diplomaCollegeName = document.getElementById('diplomaCollegeNameInput').value;
                const diplomaMarks = document.getElementById('diplomaMarksInput').value;
                const diplomaPassingYear = document.getElementById('diplomaPassingYearInput').value;
    
    
                
    
                showLoader();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.studentRegistrationController.createStudentBasicAccount}',
                    name,
                    phone,
                    email,
                    address1,
                    // address2,
                    usn,
                    city,
                    state,
                    pincode,
                    collegeId,
                    schoolName,
                    schoolMarks,
                    schoolPassYear,
                    secondarySchoolName,
                    puMarks,
                    puPassingYear,
                    degreeType,
                    branchType,
                    degreeMarks,
                    degreePassingYear,
                    handleResult
                );
            }
    
            function handleResult(result, event) {
                hideLoader();
                const successfulSection = document.getElementById("successfulSection");
                const failSection = document.getElementById("failSection");
                const degDetailsSection = document.getElementById("degDetails");
                const prevDetailsSection = document.getElementById("basicDetails");
                const progressBarContainer = document.querySelector(".progress-bar");
                const progressText = document.querySelector(".progress-text");
                if (event.status) {
                    prevDetailsSection.style.display = "none";
                    successfulSection.style.display = "block";
                    const sectionShadow = document.querySelector(".section-body");
                    //const progressBar = document.querySelector(".progress");
                    // progressText.style.display= "none";
                    // progressBarContainer.style.height = "10px";
                    // progressBar.style.clipPath = "polygon(0 0, 100% 0, 100% 100%, 0% 100%)";
                    // progressBar.style.width = '100%';
                    sectionShadow.classList.add("section-body-green-shadow");
                    // progressBar.classList.add("progress-green");
                } else {
                    prevDetailsSection.style.display = "none";
                    failSection.style.display = "block";
                    const sectionShadow = document.querySelector(".section-body");
                    // const progressBar = document.querySelector(".progress");
                    // const progressBarContainer = document.querySelector(".progress-bar");
                    // progressText.style.display= "none";
                    // progressBarContainer.style.height = "10px";
                    // progressBar.style.clipPath = "polygon(0 0, 100% 0, 100% 100%, 0% 100%)";
                    // progressBar.style.width = '100%';
                    // sectionShadow.classList.add("section-body-red-shadow");
                    // progressBar.classList.add("progress-red");
                    displayErrorMessage(event.message);
    
                }
            }
    
    
            function displayErrorMessage(errorText) {
                const errorCustom = document.getElementById("errorCustom");
                const alertText = errorCustom.querySelector("#alertText");
                const alertImg = errorCustom.querySelector("#alertImg");
                errorCustom.textContent = "";
                errorCustom.appendChild(alertImg);
                errorCustom.appendChild(document.createTextNode("Error: " + errorText));
                errorCustom.appendChild(alertText);
    
                errorCustom.style.display = 'flex';
                errorCustom.classList.add("alert-animation");
                setTimeout(() => {
                    errorCustom.style.display = "none";
                    errorCustom.classList.remove("alert-animation");
                }, 5000);
            }
    
            function displayWarningMessage(warningText) {
                const warningCustom = document.getElementById("warningCustom");
                const warnText = document.getElementById("warnText"); // Get the warnText element
                const warnImg = document.getElementById("warnImg"); // Get the warnImg element
    
                warningCustom.textContent = ""; // Clear any existing content
                warningCustom.appendChild(warnImg);
    
                // Create a text node and set its content
                const warningTextNode = document.createTextNode("Warning: " + warningText);
                warningCustom.appendChild(warningTextNode);
    
                warningCustom.appendChild(warnText); // Append the warnText element
    
                warningCustom.style.display = 'flex';
                // warningCustom.classList.add("alert-animation");
                setTimeout(() => {
                    warningCustom.style.display = "none";
                    warningCustom.classList.remove("alert-animation");
                }, 5000);
            }
    
            function routeToStudentLogin() {
                var targetPageUrl = '/apex/studentLoginPageAlt';
                showLoader();
                window.location.href = targetPageUrl;
                hideLoader();
                
            }
            function showLoader() {
                document.querySelector(".loader").classList.remove("hidden");
            }
    
            function hideLoader() {
                document.querySelector(".loader").classList.add("hidden");
            }
            function displayDetailsSummary() {
    // Collect values from input fields
    const name = document.getElementById('nameInput').value;
    const phone = document.getElementById('phoneInput').value;
    const email = document.getElementById('emailInput').value;
    const address1 = document.getElementById('address1Input').value;
    // const address2 = document.getElementById('address2Input').value;
    const city = document.getElementById('cityInput').value;
    const state = document.getElementById('stateInput').value;
    const pincode = document.getElementById('pincodeInput').value;
    const usn = document.getElementById('usnInput').value;
    const collegeName = document.getElementById('collegeDropdown').options[document.getElementById('collegeDropdown').selectedIndex].text;
    const schoolName = document.getElementById('schoolNameInput').value;
    const schoolMarks = document.getElementById('schoolMarksInput').value;
    const schoolPassYear = document.getElementById('schoolPassingYearInput').value;
    const secondarySchoolName = document.getElementById('secondarySchoolNameInput').value;
    const puMarks = document.getElementById('puMarksInput').value;
    const puPassingYear = document.getElementById('puPassingYearInput').value;
    const degreeType = document.getElementById('degreeDropdown').options[document.getElementById('degreeDropdown').selectedIndex].text;
    const degreeMarks = document.getElementById('degreeMarksInput').value;
    const degreePassingYear = document.getElementById('degreePassingYearInput').value;

    // Optional fields
    const diplomaCollegeName = document.getElementById('diplomaCollegeNameInput').value;
    const diplomaMarks = document.getElementById('diplomaMarksInput').value;
    const diplomaPassingYear = document.getElementById('diplomaPassingYearInput').value;
    const branchDropdown = document.getElementById('branchDropdown');
    const selectedBranchOption = branchDropdown.options[branchDropdown.selectedIndex];
    const branchType = selectedBranchOption.value === 'invalid' ? '' : selectedBranchOption.text;

    // Create the summary text
    const summary = `
        <div class="preview-section">
            <p class="previewTitle">Name:</p>
            <p class="previewValue">${name}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">Phone:</p>
            <p class="previewValue">${phone}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">Email:</p>
            <p class="previewValue">${email}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">Address:</p>
            <p class="previewValue">${address1}, ${city}, ${state} - ${pincode}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">USN:</p>
            <p class="previewValue">${usn}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">College:</p>
            <p class="previewValue">${collegeName}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">SSLC/X Institution:</p>
            <p class="previewValue">${schoolName}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">SSLC/X Marks:</p>
            <p class="previewValue">${schoolMarks}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">SSLC/X Passing Year:</p>
            <p class="previewValue">${schoolPassYear}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">PU Institution Name:</p>
            <p class="previewValue">${secondarySchoolName}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">PU Marks:</p>
            <p class="previewValue">${puMarks}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">PU Passing Year:</p>
            <p class="previewValue">${puPassingYear}</p>
        </div>
        ${diplomaCollegeName ? `
            <div class="preview-section">
                <p class="previewTitle">Diploma College:</p>
                <p class="previewValue">${diplomaCollegeName}</p>
            </div>
        ` : ''}
        ${diplomaMarks ? `
            <div class="preview-section">
                <p class="previewTitle">Diploma Marks:</p>
                <p class="previewValue">${diplomaMarks}</p>
            </div>
        ` : ''}
        ${diplomaPassingYear ? `
            <div class="preview-section">
                <p class="previewTitle">Diploma Passing Year:</p>
                <p class="previewValue">${diplomaPassingYear}</p>
            </div>
        ` : ''}
        <div class="preview-section">
            <p class="previewTitle">Degree Type:</p>
            <p class="previewValue">${degreeType}</p>
        </div>
        ${branchType !== '' ? `
            <div class="preview-section">
                <p class="previewTitle">Branch Type:</p>
                <p class="previewValue">${branchType}</p>
            </div>
        ` : ''}
        <div class="preview-section">
            <p class="previewTitle">Degree CGPA:</p>
            <p class="previewValue">${degreeMarks}</p>
        </div>
        <div class="preview-section">
            <p class="previewTitle">Degree Passing Year:</p>
            <p class="previewValue">${degreePassingYear}</p>
        </div>
    `;

    // Display the summary in the detailsSummary div
    const detailsSummary = document.getElementById('detailsSummary');
    detailsSummary.innerHTML = summary;
}

            
    
    
    </script>
</apex:page>