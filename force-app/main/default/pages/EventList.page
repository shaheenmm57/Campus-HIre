<apex:page showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="true" controller="EventList">
<head>
<link rel="preconnect" href="https://fonts.googleapis.com"/>
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous"/>
<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,800;1,100;1,200;1,300;1,400;1,500;1,800&display=swap" rel="stylesheet"/>
<style>
              :root{
          --blue-color: #150958;
          --text-color: black;
          --background-color: white;
          --red-color: #EF233C;
          }
          *{
          margin: 0;
          padding: 0;
          font-family: 'Poppins', sans-serif;
        }
        .main{
          height: 100vh;
          width: 100%;  
        }
            .header {
            height: 10vh;
            width: 100%;
            background: var(--blue-color);
            display: flex;
            align-items: center;
            justify-content: space-between;
            }
            .novigo-icon{
          height: 8vh;
          margin-left: 8px;
        }
        .title {
            /* margin-top: 4vh; */
            margin-right:4vh;
            display: flex;
            justify-content: center;
            align-items: center;
            position: sticky;
            top: 0;
            /* background-color: white; */
            z-index: 1;
        }
        .title-text {
            font-size: 2vw;
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            padding:10px;
            color: var(--background-color);
        }

        button{
            width: 10vw;
            margin-left: 1.5vw;
            background-color: var(--red-color); 
            color: white; 
            border-radius: 5px; 
            border: 2px solid var(--red-color); 
            cursor: pointer;
            transition: ease-in-out 0.2s;
        }
        button:hover{
          background-color: var(--text-color);
        }

        .searchbar{
            background: var(--blue-color);
            width: 89%;
            height: 6%;
            margin-left: 10vh;
            margin-top: 15vh;
        }
                    table {
                    border-collapse: collapse;
                    width: 89%;
                    margin-left: 10vh;
                    /* margin-top: 25vh; */
                    font-size: 0.9em;
                    font-family: sans-serif;
                    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
                }
                th, td {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                }
                th {
                    background-color: #f2f2f2;
                }
                
                .eventText:hover{
                    color: var(--red-color);
                }

                input {
                    border-radius: 5px;
                    margin-left: 1.5vw;
                    margin-top: 1vh;
                    border: 2.5px solid lightblue;
                }

                input:active{
                    border: 2.5px solid red;
                }

                .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
}

/* CSS for the modal content */
.modal-content {
    background-color: #f4f4f4;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 5px;
    width: 300px;
    text-align: center;
}

/* CSS for the close button */
.close {
    color: #888;
    float: right;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover {
    color: #000;
}

</style>
<script>

    window.onload = showTable('random',2);

    var input, filter, table, tr, td, i, txtValue, cpinput, cutoffinput, studentcutoff, studentcpcutoff;

    var activeTable = 'Event';
    var cpsearch = document.createElement("input");
    cpsearch.type = "number";
    cpsearch.id = "cpsearch";
    cpsearch.placeholder = "Enter C Programming Cutoff";

    var cutoffsearch = document.createElement("input");
    cutoffsearch.type = "number";
    cutoffsearch.id = "cutoffsearch";
    cutoffsearch.placeholder = "Enter Cutoff";

    var printButton = document.createElement("button");
    printButton.id = "print-button";
    printButton.innerText = "Print";
    printButton.onclick = function(){openFilenameModal();};



    var backButton = document.createElement("button");
    backButton.id = "go-back-button";
    backButton.innerText = "Go Back";
    backButton.onclick = function() {showTable('yes',2);};


    function openFilenameModal() {
    var modal = document.getElementById("filenameModal");
    modal.style.display = "block";
}

function closeFilenameModal() {
    var modal = document.getElementById("filenameModal");
    modal.style.display = "none";
}

function exportWithFilename() {
    var filenameInput = document.getElementById("filenameInput");
    var filename = filenameInput.value;

    if (!filename.toLowerCase().endsWith(".xlsx")) {
        filename += ".xlsx";
    }
    
    // Call your export function with the filename
    exportTableToExcel("student-list", filename);
    
    // Close the modal
    closeFilenameModal();
}





    
 // Load the xlsx library dynamically
 var script = document.createElement('script');
    script.src = '{!URLFOR($Resource.xlsxLib)}';
    script.type = 'text/javascript';
    script.onload = function() {
        // The xlsx library is now loaded and you can use it
    };
    document.head.appendChild(script);





    function exportTableToExcel(tableId, filename) {
        var table = document.getElementById(tableId);

// Filter the rows based on your criteria (e.g., using the display style)
            var filteredRows = [];
            var rows = table.getElementsByTagName("tr");
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].style.display !== "none") {
                    filteredRows.push(rows[i]);
                }
            }

            // Create a new table containing only the visible rows
            var filteredTable = document.createElement("table");

            // Create and add the table headers to the filtered table
            var headerRow = filteredTable.insertRow(0);
            var headerCells = table.rows[0].cells;
            for (var i = 0; i < headerCells.length; i++) {
                var newHeaderCell = headerRow.insertCell(i);
                newHeaderCell.innerHTML = headerCells[i].innerHTML; // Copy cell content
            }

            // Add the visible rows to the filtered table, excluding the header row
            for (var i = 1; i < filteredRows.length; i++) {
                var newRow = filteredTable.insertRow(i);
                var cells = filteredRows[i].getElementsByTagName("td");
                for (var j = 0; j < cells.length; j++) {
                    var newCell = newRow.insertCell(j);
                    newCell.innerHTML = cells[j].innerHTML; // Copy cell content
                }
            }

            // Export the filtered data to Excel using the new filtered table
            var wb = XLSX.utils.table_to_book(filteredTable, { sheet: "Sheet1" });
            XLSX.writeFile(wb, filename);

            // Discard the filtered table (not appended to the document)
            filteredTable = null;
            };








    function routeToStudentPage(eventId,studentId) {
                var targetPageUrl = '/apex/studentProfile?eventId=' + eventId  + '&studentId=' + studentId;
                window.location.href = targetPageUrl;
                
            }


        function filterTable(viewTable) {
        input = document.getElementById("search");
        filter = input.value.toUpperCase();
        if(viewTable == 'Event'){
            table = document.getElementById("event-list");
        }
        else{
            table = document.getElementById("student-list");
            cpinput = parseInt(document.getElementById("cpsearch").value.trim());
            cutoffinput = parseInt(document.getElementById("cutoffsearch").value.trim());
            
        }
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0]; // Change the index to target the desired column (0 for the first column)

        if (td) {
            txtValue = td.textContent || td.innerText;
            if(viewTable == 'Event'){
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
                } else {
                tr[i].style.display = "none";
                }
            }
            else{
                studentcutoff = parseInt(tr[i].getElementsByTagName("td")[1].textContent);
                studentcpcutoff = parseInt(tr[i].getElementsByTagName("td")[2].textContent);

                if (!isNaN(cutoffinput) ||  !isNaN(cpinput) ){

                    if (!isNaN(cutoffinput) &&  !isNaN(cpinput) ){
                        if (txtValue.toUpperCase().indexOf(filter) > -1 && (!isNaN(cutoffinput) && studentcutoff >= cutoffinput) && (!isNaN(cpinput) && studentcpcutoff >= cpinput) ) {
                                tr[i].style.display = "";
                        }else{
                                tr[i].style.display = "none";
                            }
                            
                    }
                    
                    else{
                        if (txtValue.toUpperCase().indexOf(filter) > -1 && ((!isNaN(cutoffinput) && studentcutoff >= cutoffinput) || (!isNaN(cpinput) && studentcpcutoff >= cpinput) )) {
                                tr[i].style.display = "";
                        } else{
                            tr[i].style.display = "none";
                        }
                    }
                }
                else{
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                    } else {
                    tr[i].style.display = "none";
                    }

                }

                
            }
            
        }
        }
    }


  

            function showTable(eventId,check) {
            // Call an action in the controller to fetch associated contacts and re-render the table
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.EventList.showResults}',
                eventId,
                check,
                function(result, event) {
                    if (event.status) {
                        // Handle the result and re-render the table
                        var tableHtml = '';
                        if (check == 1){
                            document.getElementById("searchbar").appendChild(cutoffsearch);
                            document.getElementById("searchbar").appendChild(cpsearch);
                            document.getElementById("searchbar").appendChild(printButton);
                            document.getElementById("searchbar").appendChild(backButton);
                            tableHtml += '<table id ="student-list">';
                            tableHtml += '<tr><th>Student Name</th> <th>Phone</th><th>Email</th><th>USN</th><th>Marks Scored</th><th>C Programming Marks</th><th>Aptitude Marks</th><th>Negative Marks</th> <th>Negative C Programming Marks</th> <th>Negative Aptitude Marks</th></tr>';
                            for (var i = 0; i < result.studentInfoList.length; i++) {
                                tableHtml += '<tr>';
                                tableHtml += '<td><a href="javascript:void(0);" onclick = "routeToStudentPage(\'' + eventId + '\' , \'' + result.studentInfoList[i].Id + '\')">' + result.studentInfoList[i].studentData.name + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].studentData.phone + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].studentData.email + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].studentData.usn + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].marksScored + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].cpMarks + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].aptiMarks + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].negtotalMarks + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].negcpMarks + '</td>';
                                tableHtml += '<td>' + result.studentInfoList[i].negaptiMarks + '</td>';
                                tableHtml += '</tr>';

                            }
                            tableHtml += '</table>';
                            activeTable = 'Student';

                            setTimeout(() => {
                                document.getElementById("cpsearch").addEventListener("keyup", function(event){
                                filterTable(activeTable);
                            });

                                document.getElementById("cutoffsearch").addEventListener("keyup", function(event){
                                filterTable(activeTable);
                            });


                        }, 2000);

                            

                        }
                        else{
                            var checkcpsearch = document.getElementById("cpsearch");
                            var checkcutoffsearch = document.getElementById("cutoffsearch");
                            var checkprintbutton = document.getElementById("print-button");
                            var checkbackbutton = document.getElementById("go-back-button");
                            if (checkcpsearch && checkcutoffsearch){
                                checkcpsearch.parentNode.removeChild(checkcpsearch);
                                checkcutoffsearch.parentNode.removeChild(checkcutoffsearch);
                                checkprintbutton.parentNode.removeChild(checkprintbutton);
                                checkbackbutton.parentNode.removeChild(checkbackbutton);
                            }
                            tableHtml += '<table id = "event-list">';
                            tableHtml += '<tr><th> Event Name</th><th> Event Date</th></tr>'
                            for (var i = 0; i < result.Event_List.length; i++){
                            
                                var timestamp = result.Event_List[i].event_date__c;

                                // Convert the timestamp to a Date object
                                var date = new Date(timestamp);

                                // Define an array of suffixes for the day (e.g., 'st', 'nd', 'rd', 'th')
                                var daySuffixes = ['st', 'nd', 'rd', 'th'];

                                // Get the day of the month
                                var day = date.getDate();

                                // Determine the day suffix based on the day
                                var daySuffix = daySuffixes[(day >= 11 && day <= 13) ? 3 : (day % 10) - 1];

                                // Define an array of month names
                                var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

                                // Get the month name
                                var monthName = monthNames[date.getMonth()];

                                // Get the year
                                var year = date.getFullYear();

                                // Create the formatted date string
                                var formattedDate = day + daySuffix + ' ' + monthName + ' ' + year;

                                tableHtml += '<tr>';
                                tableHtml += '<td> <a class = "eventText" href="javascript:void(0);" onclick="showTable(\'' + result.Event_List[i].Id + '\',1)">' + result.Event_List[i].Name + '</a></td>';   
                                tableHtml += '<td>'+ formattedDate +'</td>';
                                tableHtml += '</tr>';
                                }
                                tableHtml += '</table>';
                                activeTable = "Event";

                        }

                        // Replace the existing table with the updated table
                        document.getElementById('displayTable').innerHTML = tableHtml;
                    } 
                    
                    else {
                        alert('Error fetching contacts: ' + event.message);
                    }
                },
                { escape: false }
            );
        }

        document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("search").addEventListener("keyup", function(event){
        filterTable(activeTable);
    })
  });
</script>
</head>
<body>
    <div class = "main">
    <div class="header">
        <div>
            <img class="novigo-icon" src="{!URLFOR($Resource.novigo_logo)}" alt="Novigo Icon"/>
        </div>
        <div class="title">
            <img class="create-event-icon" src="{!URLFOR($Resource.RegisterCollegeIcon)}" alt="Create Event Icon" width="50px" height="50px"/>
                &nbsp;
            <span class="title-text">Events</span>
        </div>
      </div>
      <div class = "searchbar" id = "searchbar">
        <input type="text" id="search" placeholder="Search by name"></input>
    </div>
    <div class = "displayTable" id = "displayTable">
    </div>
    <div id="filenameModal" class="modal">
        <div class="modal-content">
            <span id="closeModal" class="close" onclick="closeFilenameModal()">&times;</span>
            <input type="text" id="filenameInput" placeholder="Enter a filename"></input>
            <button onclick="exportWithFilename()">Export</button>
        </div>
    </div>
</div>
</body>

</apex:page>